{"version":3,"sources":["typecolors/typeColors.js","components/Type.jsx","actions/filterActions.js","components/Item.jsx","actions/detailsActions.js","actions/pokemonsActions.js","selectors/filterSelector.js","components/LoadResetButton.jsx","components/ItemsList.jsx","actions/fetchActions.js","extractDataFrom.js","components/Details.jsx","App.jsx","redusers/rootReducer.js","index.js"],"names":["typeColors","normal","fighting","fairy","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","unknown","StyledSpan","styled","span","props","css","color","connect","dispatch","setFilter","type","filterOption","children","toLowerCase","onClick","className","showDetails","pokemon","data","name","types","sprite","src","alt","map","key","setPokemons","pokemons","setNextUrl","nextUrl","filterOptions","length","filter","poke","every","opt","includes","state","fetchingDataState","onClickAction","title","isDisabled","disabled","filterSelector","resetAllFilters","fetchPokemons","getState","a","axios","results","next","promises","p","url","Promise","all","extracted","r","id","weight","stats","moves","sprites","extractedStats","stat","value","base_stat","split","n","capitalize","join","push","extractedTypes","useEffect","Fragment","detailsData","details","s","detailsVisibility","isVisible","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0e6e7a1.chunk.js","sourcesContent":["export const typeColors = {\n  normal: \"159, 159, 107\",\n  fighting: \"185, 32, 24\",\n  fairy: \"248, 166, 255\",\n  flying: \"159, 132, 238\",\n  poison: \"150, 48, 150\",\n  ground: \"220, 185, 90\",\n  rock: \"176, 150, 40\",\n  bug: \"159, 176, 17\",\n  ghost: \"98, 73, 141\",\n  steel: \"176, 176, 202\",\n  fire: \"238, 115, 32\",\n  water: \"90, 132, 238\",\n  grass: \"107, 194, 65\",\n  electric: \"247, 202, 32\",\n  psychic: \"247, 73, 124\",\n  ice: \"141, 211, 211\",\n  dragon: \"98, 40, 247\",\n  dark: \"98, 73, 57\",\n  unknown: \"189, 189, 189\",\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setFilter } from \"../actions/filterActions\";\n\nimport { typeColors } from \"../typecolors/typeColors\";\nimport styled, { css } from \"styled-components\";\n\nconst StyledSpan = styled.span`\n  font-size: 12px;\n  padding: 4px 6px;\n  border-radius: 2px;\n  margin-right: 8px;\n  color: white;\n  ${props => css`\n    background: rgb(${props.color});\n  `}\n`;\n\nconst Type = ({ children: type, setFilter }) => {\n  const color = typeColors[type.toLowerCase()];\n  return (\n    <StyledSpan\n      color={color}\n      onClick={() => setFilter(type)}\n      className=\"filter-item\"\n    >\n      {type}\n    </StyledSpan>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setFilter: type => dispatch(setFilter(type))\n});\n\nexport default connect(null, mapDispatchToProps)(Type);\n","export const setFilter = filterOption => ({\n  type: \"FILTER_SET\",\n  filterOption\n});\n\nexport const resetAllFilters = () => ({\n  type: \"FILTER_RESET\"\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { showDetails } from \"../actions/detailsActions\";\nimport Type from \"./Type\";\n\nconst Item = ({ pokemon, showDetails }) => {\n  const { name, types, sprite } = pokemon;\n  return (\n    <div className=\"flex-column shadow poke-item\">\n      <img src={sprite} alt={name} onClick={() => showDetails(pokemon)} />\n      <p className=\"poke-name\">{name}</p>\n      <div className=\"poke-types\">\n        {types.map(type => (\n          <Type key={type}>{type}</Type>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  showDetails: pokemon => dispatch(showDetails(pokemon))\n});\n\nexport default connect(null, mapDispatchToProps)(Item);\n","export const showDetails = data => ({\n  type: \"DETAILS_SHOW\",\n  data\n});\n","import axios from \"axios\";\nimport extractDataFrom from \"../extractDataFrom\";\n\nimport {\n  fetchingDataRequest,\n  fetchingDataSuccess,\n  fetchingDataFailure\n} from \"./fetchActions\";\n\nexport const setPokemons = pokemons => ({\n  type: \"POKEMONS_SET\",\n  pokemons\n});\n\nexport const fetchPokemons = () => async (dispatch, getState) => {\n  try {\n    dispatch(fetchingDataRequest());\n    const { nextUrl } = getState();\n    const {\n      data: { results: pokemons, next }\n    } = await axios(nextUrl);\n    const promises = pokemons.map(p => axios(p.url));\n    const results = await Promise.all(promises);\n    const extracted = extractDataFrom(results);\n\n    dispatch(setPokemons(extracted));\n    dispatch(setNextUrl(next));\n    dispatch(fetchingDataSuccess());\n  } catch (error) {\n    dispatch(fetchingDataFailure());\n  }\n};\n\nexport const setNextUrl = nextUrl => ({\n  type: \"NEXT_URL_SET\",\n  nextUrl\n});\n","export default ({ pokemons, filterOptions }) => {\n  return filterOptions.length\n    ? pokemons.filter(poke => {\n        return filterOptions.every(opt => poke.types.includes(opt));\n      })\n    : pokemons;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst LoadResetButton = ({\n  type,\n  fetchingDataState,\n  nextUrl,\n  onClickAction\n}) => {\n  const title = type === \"load\" ? \"Load more\" : \"Reset filter\";\n  const isDisabled = fetchingDataState === \"request\" || !nextUrl;\n  return (\n    <button\n      className={`btn ${type}`}\n      onClick={onClickAction}\n      disabled={isDisabled}\n    >\n      {isDisabled ? 'Loading' : title}\n    </button>\n  );\n};\n\nconst mapStateToProps = state => ({\n  fetchingDataState: state.fetchingDataState,\n  nextUrl: state.nextUrl\n});\n\nexport default connect(mapStateToProps)(LoadResetButton);\n","import React, { useEffect } from \"react\";\nimport Item from \"./Item\";\nimport { connect } from \"react-redux\";\nimport { resetAllFilters } from \"../actions/filterActions\";\nimport { fetchPokemons } from \"../actions/pokemonsActions\";\nimport filterSelector from \"../selectors/filterSelector\";\nimport LoadResetButton from \"./LoadResetButton\";\n\nconst ItemsList = ({\n  pokemons,\n  filterOptions,\n  fetchPokemons,\n  resetAllFilters\n}) => {\n  useEffect(() => {\n    fetchPokemons();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"poke-list\">\n        {pokemons.map(pokemon => (\n          <Item pokemon={pokemon} key={pokemon.name} />\n        ))}\n        {filterOptions.length ? (\n          <LoadResetButton type=\"reset\" onClickAction={resetAllFilters} />\n        ) : (\n          <LoadResetButton type=\"load\" onClickAction={fetchPokemons} />\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filterOptions: state.filterOptions,\n  pokemons: filterSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetAllFilters: () => dispatch(resetAllFilters()),\n  fetchPokemons: () => dispatch(fetchPokemons())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsList);\n","export const fetchingDataRequest = () => ({\n  type: \"FETCH_DATA_REQUEST\"\n});\n\nexport const fetchingDataSuccess = () => ({\n  type: \"FETCH_DATA_SUCCESS\"\n});\n\nexport const fetchingDataFailure = () => ({\n  type: \"FETCH_DATA_FAILURE\"\n});\n","import capitalize from \"lodash/capitalize\";\n\n// I know that all code below is garbage. Forgive me!\nexport default data => {\n  return data.map(r => {\n    const { id, name, weight, stats, types, moves, sprites } = r.data;\n\n    const extractedStats = stats.map(stat => {\n      const {\n        base_stat: value,\n        stat: { name }\n      } = stat;\n      const capitalizedName = name\n        .split(\"-\")\n        .map(n => capitalize(n))\n        .join(\" \");\n      return { name: capitalizedName, value };\n    });\n\n    extractedStats.push(\n      { name: \"Moves\", value: moves.length },\n      { name: \"Weight\", value: weight }\n    );\n\n    const extractedTypes = types.map(type => {\n      const {\n        type: { name }\n      } = type;\n      return capitalize(name);\n    });\n\n    const sprite = sprites[\"front_default\"];\n\n    return {\n      id,\n      name: capitalize(name),\n      sprite,\n      stats: extractedStats,\n      types: extractedTypes\n    };\n  });\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Details = ({ detailsData }) => {\n  const { sprite, name, id, stats, types } = detailsData;\n\n  return (\n    <div className=\"poke-details-wrapper\">\n      <aside className=\"shadow poke-details\">\n        <img src={sprite} alt={name} />\n        <p className=\"name\">{`${name} #${id}`}</p>\n        <table>\n          <tbody>\n            <tr>\n              <td>Type</td>\n              <td>{types.join(\" - \")}</td>\n            </tr>\n            {stats.map(s => (\n              <tr key={s.name}>\n                <td>{s.name}</td>\n                <td>{s.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </aside>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  detailsData: state.details.data\n});\n\nexport default connect(mapStateToProps)(Details);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\nimport ItemsList from \"./components/ItemsList\";\nimport Details from \"./components/Details\";\n\nconst App = ({ detailsVisibility }) => {\n  return (\n    <div className=\"app\">\n      <nav className=\"nav-panel\">POKEDEX</nav>\n      <ItemsList />\n      {detailsVisibility && <Details />}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  detailsVisibility: state.details.isVisible\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\n\nconst pokemonsReducer = (state = [], { type, pokemons }) => {\n  switch (type) {\n    case \"POKEMONS_SET\":\n      return [...state, ...pokemons];\n    default:\n      return state;\n  }\n};\n\nconst nextUrlReducer = (\n  state = \"https://pokeapi.co/api/v2/pokemon/?limit=12\",\n  { type, nextUrl }\n) => {\n  switch (type) {\n    case \"NEXT_URL_SET\":\n      return nextUrl;\n    default:\n      return state;\n  }\n};\n\nconst detailsReducer = (\n  state = { isVisible: false, data: null },\n  { type, data }\n) => {\n  switch (type) {\n    case \"DETAILS_SHOW\":\n      return { isVisible: true, data };\n    case \"FILTER_SET\":\n      return { isVisible: false, data: null };\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = [], { type, filterOption }) => {\n  switch (type) {\n    case \"FILTER_SET\":\n      return state.includes(filterOption) ? state : [...state, filterOption];\n    case \"FILTER_RESET\":\n      return [];\n    case \"POKEMONS_ADD\":\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst fetchingReducer = (state = \"request\", { type }) => {\n  switch (type) {\n    case \"FETCH_DATA_REQUEST\":\n      return \"request\";\n    case \"FETCH_DATA_SUCCESS\":\n      return \"success\";\n    case \"FETCH_DATA_FAILURE\":\n      return \"failure\";\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  fetchingDataState: fetchingReducer,\n  pokemons: pokemonsReducer,\n  nextUrl: nextUrlReducer,\n  details: detailsReducer,\n  filterOptions: filterReducer\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./redusers/rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}